name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer files to server
        run: |
          rsync -avz --exclude=".git" --exclude=".github" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/app/

      - name: Deploy on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
          set -e
          echo "Switching to project directory..."
          cd ~/app/
        
          echo "Exporting environment variables..."
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          export BOT_TOKEN=${{ secrets.BOT_TOKEN }}
        
          echo "Stopping old containers..."
          docker-compose down || true
          echo "Stopping any leftover containers..."
          docker ps -q | xargs -r docker stop || true
        
          echo "Checking if Docker network exists..."
          if docker network ls --filter name=app_backend_network --quiet; then
            echo "Network exists, removing it..."
            docker network rm app_backend_network
          else
            echo "Network does not exist."
          fi
      
          echo "Pulling latest images..."
          docker-compose pull
      
          echo "Building new containers..."
          docker-compose build --no-cache
      
          echo "Starting new containers..."
          docker-compose up -d
      
          echo "Cleaning up unused Docker images..."
          docker image prune -f
          EOF
        

      - name: Cleanup SSH keys
        if: always()
        run: rm -rf ~/.ssh
